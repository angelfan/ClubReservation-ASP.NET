@model ClubReservation.Models.User
@{
    ViewBag.Title = "个人中心";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles {
    <!--/日期控件样式-->
    <link href="@Url.Content("~/Content/css/bootstrap-datetimepicker.min.css")" rel="stylesheet" />
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("~/Scripts/pagejs/userZone.js")"></script>
    <!--/日期控件js-->
    <script src="@Url.Content("~/Scripts/js/bootstrap-datetimepicker.js")"></script>
    <script src="@Url.Content("~/Scripts/js/bootstrap-datetimepicker.zh-CN.js")"></script>
}

<div class="page-header position-relative">
    <h1>个人中心</h1>
</div><!--/page-header-->
<div class="row-fluid" id="div-alert-message">
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-block alert-error">
            <button type="button" class="close" data-dismiss="alert"><i class="icon-remove"></i></button>
            <span>
                <i class="icon-remove red"></i>
                @TempData["Error"]
            </span>
        </div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-block alert-success">
            <button type="button" class="close" data-dismiss="alert"><i class="icon-remove"></i></button>
            <span>
                <i class="icon-ok green"></i>
                @TempData["Success"]
            </span>
        </div>
    }
</div>
<div class="row-fluid">
    <!-- 表单开始-->
    @using (Html.BeginForm("SuperZone", "UserZone", FormMethod.Post, new { id = "userFrom", @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="control-group">
            @Html.LabelFor(model => model.EmployeeCode, new { @class = "control-label" })
            <div class="controls">
                <span class="input-icon">
                    @Html.TextBoxFor(model => model.EmployeeCode, new { @readonly = "readonly" })
                    <i class="icon-leaf"></i>
                </span>
            </div>
        </div>
        @Html.HiddenFor(model => model.Password)
        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                <span class="input-icon">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                    <i class="icon-leaf"></i>
                </span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Sex, new { @class = "control-label" })
            <div class="controls">
                <span class="input-icon">
                    @{
        List<SelectListItem> sexList = new List<SelectListItem>();
        sexList.Add(new SelectListItem { Text = "男", Value = "0" });
        sexList.Add(new SelectListItem { Text = "女", Value = "1" });
                    }
                    @Html.DropDownListFor(model => model.Sex, new SelectList(sexList, "Value", "Text", ""))
                    @Html.ValidationMessageFor(model => model.Sex)
                </span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Team, new { @class = "control-label" })
            <div class="controls">
                <span class="input-icon">
                    @Html.EditorFor(model => model.Team)
                    @Html.ValidationMessageFor(model => model.Team)
                    <i class="icon-leaf"></i>
                </span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Tel, new { @class = "control-label" })
            <div class="controls">
                <span class="input-icon">
                    @Html.EditorFor(model => model.Tel)
                    @Html.ValidationMessageFor(model => model.Tel)
                    <i class="icon-leaf"></i>
                </span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Phone, new { @class = "control-label" })
            <div class="controls">
                <span class="input-icon">
                    @Html.EditorFor(model => model.Phone)
                    @Html.ValidationMessageFor(model => model.Phone)
                    <i class="icon-leaf"></i>
                </span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label" })
            <div class="controls">
                <span class="input-icon">
                    @Html.EditorFor(model => model.Email)
                    @Html.ValidationMessageFor(model => model.Email)
                    <i class="icon-leaf"></i>
                </span>
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.EntryTime, new { @class = "control-label" })
            <div class="controls">
                @{string entrytime = null;}
                @if (Model.EntryTime != null)
                {
                    DateTime dt = DateTime.Parse(Model.EntryTime);
                    entrytime = dt.ToString("yyyy-MM-dd");
                }
                <div class="input-append date" id="datetimepicker" data-date-format="yyyy-mm-dd">
                    <input class="text-box single-line input-validation-error" data-val="true" data-val-date="请输入正确的日期格式"
                           data-val-required="请输入入职日期" id="EntryTime"
                           name="EntryTime" type="datetime" value="@(entrytime)">
                    <span class="add-on"><i class="icon-th"></i></span>
                </div>
                @Html.ValidationMessageFor(model => model.EntryTime)
            </div>
        </div>
        <div class="form-actions">
            <button class="btn btn-info btn-small" type="submit"><i class="icon-ok"></i>提交</button>
            &nbsp; &nbsp;
            <button class="btn btn-small" type="reset"><i class="icon-undo"></i> 重置</button>
            &nbsp; &nbsp;
            <a id="resetPassword" class="btn btn-success btn-small" href="@Url.Action("ResetPassword", "User")" value="@(Model.Id)"><i class="icon-undo"></i> 重置密码</a>
        </div>
        <div class="hr"></div>
    }
    <div class="space-24ger"></div>

</div><!--/row-->
<!-- 皮肤设置-->
<div id="ace-settings-container">
    <!--#breadcrumbs皮肤的设置-->
    @Html.Partial("~/Views/Shared/_PageSkin.cshtml")
</div>
